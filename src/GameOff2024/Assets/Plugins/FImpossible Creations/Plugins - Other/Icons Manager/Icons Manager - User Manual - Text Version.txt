FIMPOSSIBLE GAMES
USER MANUAL

Icons Manager

1. Base knowledge
2. using Icons Manager

Introduction:

Icons Manager is system which is loading sprites, 
rescaling them with smart algorithm and managing memory.
it’s dedicated to use with ui images.

You can choose image files to be rescaled and used as sprites by providing 
path to streaming assets, online adress, resources directory path or providing texture file from project’s assets directory.


If you will like this package please visit page on asset store and rate or write review :)



1 / 2: Base Knowledge

Icons Manager is loading texture files and using them to generate scaled sprite files.
For example you can use one file in 256x256 size Icons Manager can generate different 
good looking sprites in different dimensions like 32x32 other in 60x60 other in 160x160

For each dimension scale there is generated one sprite, 
then ui images are using this one sprite in a shared way.

Package system is managing memory in efficient way.
You can define how much memory can be used until not used sprites should be unloaded. 
Keeping not used sprites in memory is important because when for example you close and open whole 
inventory window few times in about minute, sprites will not need to reaload each time but will be viewed right away.

With debugging view (inside manage component inspector window) you can easily check what is 
going on with your loaded sprites and textures,  how many images are using certain sprites and how much memory they take.

You can define if images with unactive game objects should be treated as not needed then unloaded when memory
limit is exceeded and loaded again when game object becomes active again.

Each texture container have own id stored as hash of it’s path to texture for 
manager to quickly navigate between them and to identify them when needed.

Each sprite have own id for it’s texture container to quickly navigate and identify them.

To generate sprite algorithm need texture2D data with read/write enabled, this option is 
taking more memory but after we get pixel array of texture, system is unloading texture 
with read/write enabled so we use lowest amount of memory.

When loading texture which don’t have read/write enabled (only when loading from Resources or assets folder texture file) 
we rendering readable texture with ‘render texture’ getting pixels array then unloading rendered texture.



2 / 2: Using Icons Manager

To use Icons Manager, add FIcons_Manager component to new empty game object on the scene.
To generate sprite in new size you can use FIcons_Loader component, but 
it’s recommended to load everything from code with method like:

// Code

using UnityEngine;
using UnityEngine.UI;
using FIMSpace.FIcons;

public class TestLoading : MonoBehaviour
{
    public Image myUIImage; // Image to which generated sprite will be assigned

	void Start ()
    {
        int imageSize = (int)myUIImage.rectTransform.sizeDelta.x; // Size of our UI image, so we generate sprite fitting to the UI Image
        FIcons_Manager.Get.LoadSpriteManaged("FIconsManagerExample/Mask 1.png", myUIImage, imageSize);
	}
}

// Code End

Icons manager will take care of the rest.
To unload image you destroy game object with it, or disable it if you defined to unload 
deactivated objects in icons manager inspector window.
(images will be unloaded when memory use limit exceeds)

To be able to load from streaming assets, you need to have ‘StreamingAssets’ directory 
inside your assets folder, after making build unity is automatically 
moving files from this directory to build directory.


With LoadSpriteManaged() method you can define from where you want to load texture. 
Choose image to which sprite should be assigned after loading success.
Define desired width and height of sprite.
Decide if use or not animation when sprite is being generated.

Filter option is unity’s way to view images, with 'Point' you get sharpest look 
but when you move image in view slowly, motion will be less smooth than when you 
use 'Bilinear' or 'Trilinear', also this two options are nice when you need to 
scale sprite a bit after rescaling with Icons Manager. 

Set native size will set image component size to be the same as generated sprite.


FIMPOSSIBLE GAMES 2019





